function play_move(e){latest_move_dict=JSON.parse(JSON.stringify(e)),socket.send(JSON.stringify({purpose:"play_move",who:syg_role,move_dict:e}))}function update_game(){game_state.num_players<1?show_waiting_lobbby():(game_has_started||show_waiting_lobbby(),hide_waiting_lobby(),scale_stuff(1),show_stats(game_state.current_playing),show_mrx_stats(),game_state.current_playing===syg_role&&show_move_panel()),console.log("game updated")}function goto(e){var o=sc[e.toString()].x*factor,t=sc[e.toString()].y*factor,e=document.getElementById("map-div");o-=$mapdiv.width()/2,t-=$mapdiv.height()/2,e.scrollTo(o,t)}function socket_message(){socket.onmessage=function(e){e=JSON.parse(e.data);if("setup_client"===e.purpose)syg_role=e.who,console.log("setup done");else if("move_reply"===e.purpose){if(e.success)return hide_move_panel(),JSON.stringify(e.move_dict)===JSON.stringify(latest_move_dict)?void console.log("Move played"):void console.log("Wrong move played... oops");status_update("The move is invalid, try some other move",2e3)}else"game_update"===e.purpose?(game_state=e.game_state,update_game()):"game_end"===e.purpose&&(reason=e.reason,status_update(reason,1e4))}}